{"version":3,"sources":["components/CheckBox/CheckBox.js","components/InputText/InputText.js","components/InputSelect/InputSelect.js","components/InputRadio/InputRadio.js","components/BirthDate/BirthDate.js","containers/FormContainer.js","App.js","serviceWorker.js","index.js"],"names":["CheckBox","props","inputs","react_default","a","createElement","id","divId","className","divClass","name","class","type","defaultChecked","checked","value","required","onClick","e","onChange","htmlFor","InputText","label","concat","InputSelect","options","map","option","i","key","InputRadio","BirthDate","state","birthInputs","day","month","year","formatDate","_this","handleFieldChange","target","input","handleDateChange","setState","_this2","this","fields","birthDateFields","Object","values","components_InputText_InputText","customerBirthdayDay","customerBirthdayMonth","customerBirthdayYear","Component","FormContainer","parts","mainInputs","objectSpread","data","item","onSubmit","preventDefault","renderForm","self","assertThisInitialized","blocks","block","rows","keys","chain","inputsField","conditional","fieldName","components_InputSelect_InputSelect","components_BirthDate_BirthDate","components_InputRadio_InputRadio","components_CheckBox_CheckBox","title","action","method","App","categories","getValues","validation","items","errors","containers_FormContainer","Boolean","window","location","hostname","match","__webpack_require__","d","__webpack_exports__","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.11866ffc.chunk.js","sourcesContent":["import React from \"react\";\n\nconst CheckBox = props => {\n  let inputs = props.inputs;\n  return (\n    <div id={inputs.divId} className={inputs.divClass}>\n      <input\n        id={inputs.id}\n        name={inputs.name}\n        className={inputs.class}\n        type={inputs.type}\n        defaultChecked={inputs.checked || false}\n        value={inputs.value}\n        required={inputs.props.required}\n        onClick={e => props.onChange(e)}\n      />\n      <label htmlFor={inputs.id} className=\"field-label field-label--checkbox\">\n        <span className=\"field-label__content\">\n          Ja, ich habe das Produktinformationsblatt , die Verbraucherinformationen, Informationen\n          zum Widerrufsrecht und Versicherungsbedingungen sowie die Informationen zum Datenschutz\n          und die Sicherheitshinweise gelesen und stimme zu!\n        </span>\n      </label>\n\n      {/* <p className=\"p-error\" /> */}\n    </div>\n  );\n};\nexport default CheckBox;\n","import React from \"react\";\n\nconst InputText = props => {\n  let inputs = props.inputs;\n  return (\n    <div id={inputs.divId} className={inputs.divClass}>\n      <label htmlFor={inputs.id} className=\"field-label form__label\">\n        <span className=\"field-label__content\">{inputs.label}</span>\n      </label>\n      <input\n        className={`form__input ${inputs.class}`}\n        id={inputs.id}\n        name={inputs.name}\n        type={inputs.type}\n        value={inputs.value}\n        onChange={e => props.onChange(e)}\n        required={inputs.props.required}\n      />\n    </div>\n  );\n};\n\nexport default InputText;\n","import React from \"react\";\n\nconst InputSelect = props => {\n  let inputs = props.inputs;\n  return (\n    <div id={inputs.divId} className={inputs.divClass}>\n      <label htmlFor={inputs.id} className=\"field-label form__label\">\n        <span className=\"field-label__content\">{inputs.label}</span>\n      </label>\n      <select\n        name={inputs.name}\n        id={inputs.id}\n        className={`form__select small ${inputs.class}`}\n        required={inputs.props.required}\n        onChange={e => props.onChange(e)}\n      >\n        {inputs.options.map((option, i) => {\n          return (\n            <option\n              htmlFor={option.label}\n              key={i}\n              value={option.value}\n              onClick={e => props.onChange(e)}\n            >\n              {option.label}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n};\n\nexport default InputSelect;\n","import React from \"react\";\n\nconst InputRadio = props => {\n  const inputs = props.inputs;\n\n  const options = inputs.options.map(option => {\n    return (\n      <div className=\"field-radio-wrapper\" key={option.key}>\n        <label htmlFor={option.id} className=\"field-label\">\n          <span className=\"field-label__content\">{option.label}</span>\n        </label>\n        <input\n          id={option.id}\n          type={inputs.type}\n          name={inputs.name}\n          className={option.class}\n          value={option.value}\n          required={inputs.props.required}\n          defaultChecked={option.checked}\n          onClick={e => props.onChange(e)}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <div id={inputs.id} className=\"radios-wrapper\">\n      {options}\n    </div>\n  );\n};\n\nexport default InputRadio;\n","import React, { Component } from \"react\";\nimport InputText from \".././InputText/InputText\";\nimport birthInputs from \"../.././data/birthDate\";\n\nclass BirthDate extends Component {\n  state = {\n    birthInputs: birthInputs,\n    day: \"\",\n    month: \"\",\n    year: \"\"\n  };\n\n  formatDate = () => {\n    let day = this.state.day;\n    let month = this.state.month;\n    let year = this.state.year;\n    let birthDate = `${year}-${month}-${day}`;\n    return birthDate;\n  };\n  handleFieldChange = () => {\n    this.props.onChange({\n      target: {\n        name: this.props.input.name,\n        value: this.formatDate()\n      }\n    });\n  };\n  handleDateChange = e => {\n    if (e.target.name === \"customerBirthdayDay\") {\n      this.setState(\n        {\n          day: e.target.value\n        },\n        () => {\n          this.handleFieldChange();\n        }\n      );\n    }\n    if (e.target.name === \"customerBirthdayMonth\") {\n      this.setState(\n        {\n          month: e.target.value\n        },\n        () => {\n          this.handleFieldChange();\n        }\n      );\n    }\n    if (e.target.name === \"customerBirthdayYear\") {\n      this.setState(\n        {\n          year: e.target.value\n        },\n        () => {\n          this.handleFieldChange();\n        }\n      );\n    }\n  };\n\n  render() {\n    let fields = this.state.birthInputs;\n    let birthDateFields = Object.values(fields).map((input, i) => {\n      if (input.name === \"customerBirthdayDay\") {\n        input.value = this.state.day;\n      }\n      if (input.name === \"customerBirthdayMonth\") {\n        input.value = this.state.month;\n      }\n      if (input.name === \"customerBirthdayYear\") {\n        input.value = this.state.year;\n      }\n      return birthDateFields;\n    });\n    return (\n      <fieldset>\n        <div className=\"bd24_checkout-form-field form-field--memorable-date form-field--birthday\">\n          <legend>\n            <span>Gebutsdatum * </span>\n          </legend>\n          <div id=\"birthdate\" className=\"bd24_checkout-form__birthdate form__birthdate\">\n            <div className=\"form__input form__input--select field-birthdate_day\">\n              <InputText onChange={this.handleDateChange} inputs={fields.customerBirthdayDay} />\n            </div>\n            <div className=\"form__input form__input--select field-birthdate_month\">\n              <InputText onChange={this.handleDateChange} inputs={fields.customerBirthdayMonth} />\n            </div>\n            <div className=\"form__input form__input--select field-birthdate_year\">\n              <InputText onChange={this.handleDateChange} inputs={fields.customerBirthdayYear} />\n            </div>\n          </div>\n          <input id=\"birthday-backend-date\" type=\"hidden\" />\n        </div>\n      </fieldset>\n    );\n  }\n}\n\nexport default BirthDate;\n","import React, { Component } from \"react\";\nimport CheckBox from \".././components/CheckBox/CheckBox\";\nimport InputText from \"../components/InputText/InputText\";\nimport InputSelect from \".././components/InputSelect/InputSelect\";\nimport InputRadio from \".././components/InputRadio/InputRadio\";\nimport BirthDate from \".././components/BirthDate/BirthDate\";\n// import Button from \"../components/Button/\";\n\nclass FormContainer extends Component {\n  state = {\n    inputs: this.props.inputs,\n    parts: this.props.parts\n  };\n\n  onChange = e => {\n    let target = e.target;\n    let mainInputs = { ...this.state.inputs, ...this.props.birthInputs };\n    let data = Object.values(mainInputs);\n    data.map(item => {\n      if (item.type === \"checkbox\") {\n        return target.checked ? (item.value = \"yes\") : (item.value = \"no\");\n      } else {\n        return item.name === target.name ? (item.value = target.value) : null;\n      }\n    });\n    this.setState({ data });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    if (this.props.onSubmit) this.props.onSubmit(this.state.inputs);\n  };\n\n  renderForm = () => {\n    const self = this;\n    const inputs = blocks => {\n      let mainForm = blocks.map((block, i) => {\n        const rows = block.keys.map((chain, i) => {\n          let inputsField = chain.map((key, i) => {\n            let fields = self.state.inputs[key];\n            if (\n              typeof fields.conditional === \"undefined\" ||\n              !fields.conditional ||\n              self.state.inputs[fields.conditional.fieldName].value === fields.conditional.value\n            ) {\n              switch (fields.type) {\n                case \"select\":\n                  return <InputSelect onChange={this.onChange} inputs={fields} key={i} />;\n                case \"text\":\n                  return <InputText onChange={this.onChange} inputs={fields} key={i} />;\n                case \"birthDate\":\n                  return <BirthDate onChange={this.onChange} inputs={fields} key={i} />;\n                case \"radio\":\n                  return <InputRadio onChange={this.onChange} inputs={fields} key={i} />;\n                case \"checkbox\":\n                  return <CheckBox onChange={this.onChange} inputs={fields} key={i} />;\n                default:\n                  return \"\";\n              }\n            }\n            return null;\n          });\n          return (\n            <div className=\"form__fields-row\" key={i}>\n              {inputsField}\n            </div>\n          );\n        });\n        return (\n          <div className={block.class} key={i}>\n            <p className=\"form__title\">{block.title}</p>\n            <div>{rows}</div>\n          </div>\n        );\n      });\n      return mainForm;\n    };\n\n    const blocks = () => {\n      let parts = { ...this.state.parts };\n      let keys = Object.values(parts).map(item => {\n        return item;\n      });\n      return keys;\n    };\n\n    return [inputs(blocks())];\n  };\n\n  render() {\n    return (\n      <div className=\"bd24-checkout-container__form-wrapper\">\n        <h3>Payment Method</h3>\n        <form\n          id=\"customer-data-form\"\n          className=\"form checkout-form\"\n          action=\"#\"\n          method=\"post\"\n          onSubmit={e => {\n            this.onSubmit(e);\n          }}\n        >\n          {this.renderForm()}\n          <div className=\"bd24__checkout-actions\">\n            <br />\n            <button className=\"form__btn submit\" type=\"submit\">\n              submit\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default FormContainer;\n","import React, { Component } from \"react\";\nimport FormContainer from \"./containers/FormContainer\";\nimport \"./App.css\";\n\nimport inputs from \"./data/checkout\";\nimport categories from \"./data/categories\";\n\nclass App extends Component {\n  state = {\n    inputs,\n    categories\n  };\n\n  getValues = data => {\n    let values = {};\n    let dataObject = Object.values(data);\n\n    dataObject.map(item => {\n      return (values[item.name] = item.value);\n    });\n\n    return this.validation(values);\n  };\n\n  validation = values => {\n    let items = Object.values(values);\n    let errors = 0;\n    items.map(item => {\n      if (item === \"\") {\n        errors++;\n      }\n      return errors > 0 ? false : true;\n    });\n  };\n\n  onSubmit = data => {\n    return this.getValues(data);\n  };\n\n  render() {\n    return (\n      <div id=\"bd24-checkout-container\">\n        <FormContainer\n          inputs={this.state.inputs}\n          parts={this.state.categories}\n          onSubmit={data => {\n            this.onSubmit(data);\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nexport { App as Checkout };\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}